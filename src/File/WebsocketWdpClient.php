<?php/* * MIT License * * Copyright (c) 2021-2024 machinateur * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */declare(strict_types=1);namespace Machinateur\ChromeTabTransfer\File;use Machinateur\ChromeTabTransfer\File\AbstractFileTemplate;/** * A simple webkit dev-tools protocol client, using web-sockets (`ws:`). *  It is used by the {@see \Machinateur\ChromeTabTransfer\TabLoader\WdpReopenTabLoader} to implement *   automated tab restoration on iphone. * * This implementation is based on the *  example {@see https://github.com/google/ios-webkit-debug-proxy/blob/master/examples/wdp_client.html from the `ios-webkit-debug-proxy` docs}. * * The chrome dev-tools protocol and webkit dev-tools protocol have diverged in recent versions, *  which causes compatibility issues.  A list of available protocol domains can be found here: *   https://github.com/WebKit/webkit/tree/main/Source/JavaScriptCore/inspector/protocol * * The main commands by the client are `Target.sendCommandToTarget()` and `Runtime.evaluate()`. */class WebsocketWdpClient extends AbstractFileTemplate{    public function __construct(string $file, array $tabs)    {        parent::__construct($file, $tabs);        // TODO: Use constant filename, as file will be removed when process ends.        $this->filenameSuffix = '-wdp-client';    }    public function getExtension(): string    {        return 'html';    }    public function render(): string    {        // TODO: Generate stripped down (and polished) version of ./wdp_client.html, to open it in browser when running reopen.    }}